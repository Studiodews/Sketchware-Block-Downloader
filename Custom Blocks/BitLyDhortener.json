[{"name":"CreateClassBitlyShortener","palette":"66","spec":"Bit.Ly Class AccessToken %s TaskInBackground If Success","type":"e","code":"}\npublic class BitlyShortUrl extends AsyncTask\u003cVoid, Void, Void\u003e {\n    private static final String TAG \u003d \"UrlShortner\";\n    private String Response \u003d \"\";\n    private Context context;\n    private boolean isValid \u003d false;\n    private String longUrl \u003d \"\";\n    private String shortUrl \u003d \"\";\n\n    BitlyShortUrl(String url, Context ctx) {\n        this.longUrl \u003d url;\n        this.context \u003d ctx;\n    }\n\n    protected Void doInBackground(Void... voids) {\n        try {\n            java.net.HttpURLConnection httpURLConnection \u003d (java.net.HttpURLConnection) new java.net.URL(\"https://api-ssl.bitly.com/v3/shorten?access_token\u003d\" + %1$s + \"\u0026longUrl\u003d\" + java.net.URLEncoder.encode(this.longUrl, \"utf-8\")).openConnection();\n            Log.d(TAG, \"https://api-ssl.bitly.com/v3/shorten?access_token\u003d\" + %1$s + \"\u0026longUrl\u003d\" + java.net.URLEncoder.encode(this.longUrl, \"utf-8\"));\n            httpURLConnection.connect();\n            java.io.BufferedReader mBufferedInputStream \u003d new java.io.BufferedReader(new java.io.InputStreamReader(httpURLConnection.getInputStream()));\n            while (true) {\n                String inline \u003d mBufferedInputStream.readLine();\n                if (inline \u003d\u003d null) {\n                    break;\n                }\n                this.Response +\u003d inline;\n            }\n            mBufferedInputStream.close();\n            Log.d(\"response\", this.Response);\n            parseResponse(this.Response);\n        } catch (java.net.MalformedURLException e) {\n            e.printStackTrace();\n        } catch (java.io.UnsupportedEncodingException e2) {\n            e2.printStackTrace();\n        } catch (java.net.ProtocolException e3) {\n            e3.printStackTrace();\n        } catch (java.io.IOException e4) {\n            e4.printStackTrace();\n        }\n        return null;\n    }\n\n    private void parseResponse(String Response) {\n        Log.d(TAG, \"parseResponse: \" + Response);\n        try {\n            org.json.JSONObject jsonObject \u003d new org.json.JSONObject(Response);\n            if (jsonObject.getInt(\"status_code\") \u003d\u003d androidx.recyclerview.widget.ItemTouchHelper.Callback.DEFAULT_DRAG_ANIMATION_DURATION) {\n                this.shortUrl \u003d jsonObject.getJSONObject(\"data\").getString(\"url\");\n                this.isValid \u003d true;\n                return;\n            }\n            this.isValid \u003d false;\n        } catch (org.json.JSONException e) {\n            e.printStackTrace();\n        }\n    }\n\n    protected void onPostExecute(Void aVoid) {\n        super.onPostExecute(aVoid);\n        if (this.isValid) {\n            %2$s\n        } else {\n            %3$s\n        }\n    }\n}\n{"},{"name":"CreateShortLinkTask","palette":"66","spec":"Start Short Link %s at %m.activity runTaskInBackground","type":" ","code":"new BitlyShortUrl(%1$s, %2$s.this).execute(new Void[0]);"},{"name":"shortUrl","palette":"66","spec":"shortUrl","type":"v","typeName":"String","code":"shortUrl"}]