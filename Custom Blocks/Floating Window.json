[{"name":"customView0","palette":"40","spec":"customView %s.inputOnly","type":"p","typeName":"customViews","color":"#2CA5E2","code":"%s"},{"name":"FloatingWindowLibrary","palette":"40","spec":"floatingWindowLibrary view %m.customViews ","type":"c","typeName":"","color":"#2CA5E2","code":"_reCall();\n\n}\nprivate WindowManager windowManager;\n\nprivate WindowManager.LayoutParams layoutParams;\n\nprivate View displayView;\n\nprivate void showFloatingWindow() {\n\nLayoutInflater layoutInflater \u003d LayoutInflater.from(this);\n\ndisplayView \u003d layoutInflater.inflate(R.layout.%s, null); displayView.setOnTouchListener(new FloatingOnTouchListener());\n\n%s\n\nwindowManager.addView(displayView, layoutParams);\n}\n\nprivate class FloatingOnTouchListener implements View.OnTouchListener { \nprivate int x;\nprivate int y;\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\nswitch (event.getAction()) { \ncase MotionEvent.ACTION_DOWN: \nx \u003d (int) event.getRawX(); \ny \u003d (int) event.getRawY(); \nbreak;\n\ncase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX(); \nint nowY \u003d (int) event.getRawY(); \nint movedX \u003d nowX - x; \nint movedY \u003d nowY - y; \nx \u003d nowX; y \u003d nowY; \nlayoutParams.x \u003d layoutParams.x + movedX; \nlayoutParams.y \u003d layoutParams.y + movedY; windowManager.updateViewLayout(view, layoutParams); \nbreak; \ndefault: \nbreak; \n}\n return true;\n }\n }\n\npublic void closes(){\ntry{\nwindowManager.removeView(displayView);\n}\ncatch(Exception e){\n        }\n    }\nprivate void _reCall(){"},{"name":"canDrawOverlays","palette":"40","spec":"%m.activity canDrawOverlays","type":"b","typeName":"","color":"#2CA5E2","code":"android.provider.Settings.canDrawOverlays(%s.this)"},{"name":"getPermissionOverlay","palette":"40","spec":"getOverLayPermission","type":" ","typeName":"","color":"#2CA5E2","code":"Intent intent \u003d new Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION,\nUri.parse(\"package:\" + getPackageName()));\nstartActivity(intent);"},{"name":"showFloatingWindow","palette":"40","spec":"showFloatingWindow","type":" ","typeName":"","color":"#2CA5E2","code":"showFloatingWindow();"},{"name":"closeWindow","palette":"40","spec":"closeWindow","type":"f","typeName":"","color":"#2CA5E2","code":"closes();"},{"name":"FloatingFindViewID","palette":"40","spec":"%s.inputOnly findViewById %s.inputOnly ","type":" ","typeName":"","color":"#2CA5E2","code":"final %s \u003d displayView.findViewById(R.id.%s);"},{"spec2":"","typeName":"","color":"#2CA5E2","name":"AsyncTaskVoid","palette":"40","spec":"AsyncTask StartVoid \u003d\u003e Finish","type":"e","code":"new Object(){\n\t\t\tpublic void start(){\n\t\t\t\tnew AsyncTaskEx().execute();\n\t\t\t}\n\t\t\tpublic void run(){\n\t\t\t\t%s\n\t\t\t}\n\t\t\tfinal class AsyncTaskEx extends AsyncTask\u003cVoid, Void, Void\u003e {\n\t\t\t\t@Override\n\t\t\t\tprotected Void doInBackground(Void... arg0) {\n\t\t\t\t\trun();\n\t\t\t\t\treturn null;}\n\t\t\t\t@Override\n\t\t\t\tprotected void onPostExecute(Void result) {\n\t\t\t\t\t%s\n\t\t\t\t\treturn ;}\n\t\t\t\t@Override\n\t\t\t\tprotected void onPreExecute() {\n\t\t\t\t\treturn ;}}}.start();"},{"name":"setImageFromBase64String","palette":"40","spec":"%m.imageview setBase64Image %s","type":" ","typeName":"","color":"#2CA5E2","code":"new Object(){\n\t\t\t private void setB64Image(ImageView iv265, String s274){\n\t\t\t\t try{\n\t\t\t\t byte[] decodedString \u003d android.util.Base64.decode(s274.replace(\" \",\"\").replace(\"\\n\",\"\"), android.util.Base64.DEFAULT);\n\t\t\t\t android.graphics.Bitmap decodedByte \u003d android.graphics.BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length); \n\t\t\t\t iv265.setImageBitmap(decodedByte);\n\t\t\t\t }catch(Exception e72) {}\n\t\t\t }\n\t\t }.setB64Image(%s,%s);"},{"name":"onCreateFWTyp1","palette":"40","spec":"addToOnCreateActivity (1) FW width %d height %d","type":" ","typeName":"","color":"#2CA5E2","code":"windowManager \u003d (WindowManager) getSystemService(WINDOW_SERVICE); \nlayoutParams \u003d new WindowManager.LayoutParams();\n\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) { \nlayoutParams.type \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY; \n} else { \nlayoutParams.type \u003d WindowManager.LayoutParams.TYPE_PHONE; \n}\n\nlayoutParams.format \u003d PixelFormat.RGBA_8888; layoutParams.gravity \u003d Gravity.LEFT | Gravity.TOP; layoutParams.flags \u003d WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE; layoutParams.width \u003d %s; layoutParams.height \u003d %s; layoutParams.x \u003d 0;\nlayoutParams.y \u003d 0;"},{"name":"getScreenshotToB64","palette":"40","spec":"getScreenshotToB64","type":"s","typeName":"","color":"#2CA5E2","code":"new Object(){\n\tpublic String getScreenshotToB64() { try {\n\t\t\tView v1 \u003d getWindow().getDecorView().getRootView();\n\t\t\tv1.setDrawingCacheEnabled(true);\n\t\t\tjava.io.ByteArrayOutputStream baos \u003d new java.io.ByteArrayOutputStream();\n\t\t\tandroid.graphics.Bitmap bm \u003d android.graphics.Bitmap.createBitmap(v1.getDrawingCache()); \n\t\t\tv1.setDrawingCacheEnabled(false);\n\t\t\tbm.compress(android.graphics.Bitmap.CompressFormat.PNG, 100, baos);\n\t\t\tbyte[] imageBytes \u003d baos.toByteArray();\n\t\t\tString imageString \u003d android.util.Base64.encodeToString(imageBytes ,android.util.Base64.DEFAULT);\n\t\t\treturn imageString;\n\t\t}catch(Exception e){return \"\";}\n\t\n\t}\n\t}.getScreenshotToB64()"}]