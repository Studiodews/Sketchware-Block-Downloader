[{"name":"Lifecycle","palette":"30","spec":"%m.YouTubePlayerView geLifecycle","type":" ","code":"getLifecycle().addObserver(%1$s);"},{"name":"addYouTubePlayerListener","palette":"30","spec":"%m.YouTubePlayerView addYouTubePlayerListener VideoID %s","type":"c","code":"%1$s.addYouTubePlayerListener(new AbstractYouTubePlayerListener() {\n  @Override\n  public void onReady(@NonNull YouTubePlayer youTubePlayer) {\n    String videoId \u003d %2$s;\n    youTubePlayer.cueVideo(videoId, 0);\n    %3$s\n  }\n});"},{"name":"YouTubeCustomView","palette":"30","spec":"YouTubeCustomView %m.YouTubePlayerView","type":" ","code":"final YouTubePlayerView %1$s \u003d _v.findViewById(R.id.%1$s);"},{"name":"addFullScreenListener","palette":"30","spec":"addFullScreenListener","type":" ","code":"addFullScreenListenerToPlayer();"},{"name":"ListenerFullScreenMode","palette":"30","spec":"ListenerFullScreenMode %m.YouTubePlayerView at %m.activity","type":" ","code":"}\n\nprivate FullScreenHelper fullScreenHelper \u003d new FullScreenHelper(%2$s.this);\n\n    private void addFullScreenListenerToPlayer() {\n        %1$s.addFullScreenListener(new YouTubePlayerFullScreenListener() {\n            @Override\n            public void onYouTubePlayerEnterFullScreen() {\n                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n                fullScreenHelper.enterFullScreen();\n\n                \n            }\n\n            @Override\n            public void onYouTubePlayerExitFullScreen() {\n                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n                fullScreenHelper.exitFullScreen();\n\n                \n            }\n        });\n    }\n{"},{"name":"ClassFullScreenMode","palette":"30","spec":"ClassFullScreenMode","type":" ","code":"}\npublic class FullScreenHelper {\n\n    private Activity context;\n    private View[] views;\n\n    /**\n     * @param context\n     * @param views to hide/show\n     */\n    public FullScreenHelper(Activity context, View ... views) {\n        this.context \u003d context;\n        this.views \u003d views;\n    }\n\n    /**\n     * call this method to enter full screen\n     */\n    public void enterFullScreen() {\n        View decorView \u003d context.getWindow().getDecorView();\n\n        hideSystemUi(decorView);\n\n        for(View view : views) {\n            view.setVisibility(View.GONE);\n            view.invalidate();\n        }\n    }\n\n    /**\n     * call this method to exit full screen\n     */\n    public void exitFullScreen() {\n        View decorView \u003d context.getWindow().getDecorView();\n\n        showSystemUi(decorView);\n\n        for(View view : views) {\n            view.setVisibility(View.VISIBLE);\n            view.invalidate();\n        }\n    }\n\n    private void hideSystemUi(View mDecorView) {\n        mDecorView.setSystemUiVisibility(\n                View.SYSTEM_UI_FLAG_LAYOUT_STABLE\n                        | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                        | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                        | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\n                        | View.SYSTEM_UI_FLAG_FULLSCREEN\n                        | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\n    }\n\n    private void showSystemUi(View mDecorView) {\n        mDecorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE);\n    }\n}\n{"},{"name":"initPictureInPicture","palette":"30","spec":"initPictureInPicture %m.YouTubePlayerView","type":" ","code":"initPictureInPicture(%1$s);"},{"name":"Void_initPictureInPicture","palette":"30","spec":"Void_initPictureInPicture %m.YouTubePlayerView Icon %m.resource at %m.activity","type":" ","code":"}\nprivate void initPictureInPicture(YouTubePlayerView youTubePlayerView) {\n        ImageView pictureInPictureIcon \u003d new ImageView(this);\n        pictureInPictureIcon.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.%2$s));\n\n        pictureInPictureIcon.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View _view) {\n\n\t\t\t\t\tif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.N) {\n\t\t\t\t\t\tboolean supportsPIP \u003d getPackageManager().hasSystemFeature(PackageManager.FEATURE_PICTURE_IN_PICTURE);\n\t\t\t\t\t\tif(supportsPIP)\n\t\t\t\t\t\t\tenterPictureInPictureMode();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew AlertDialog.Builder(%3$s.this)\n\t\t\t\t\t\t\t.setTitle(\"Can\u0027t enter picture in picture mode\")\n\t\t\t\t\t\t\t.setMessage(\"In order to enter picture in picture mode you need a SDK version \u003e\u003d N.\")\n\t\t\t\t\t\t\t.show();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t});\n\n        youTubePlayerView.getPlayerUiController().addView(pictureInPictureIcon);\n    }\n\n\n@Override\n    public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode, Configuration newConfig) {\n        super.onPictureInPictureModeChanged(isInPictureInPictureMode, newConfig);\n\n        if(isInPictureInPictureMode) {\n            %1$s.enterFullScreen();\n            %1$s.getPlayerUiController().showUi(false);\n        } else {\n            %1$s.exitFullScreen();\n            %1$s.getPlayerUiController().showUi(true);\n        }\n    }\n\n\n{"},{"name":"BackPressCloseFullScreen","palette":"30","spec":"%m.YouTubePlayerView ifFullScreenThen","type":"e","code":"if (%1$s.isFullScreen()) {\n%1$s.exitFullScreen();\n%2$s\n}\nelse {\n%3$s\n}"}]